@model IEnumerable<GetDeviceDTO>

@{
    ViewData["Title"] = "Index";
}



<div class="container">

    <div class="row py-3">
        <div class="col">
            <h2 class="text-primary">Devices List</h2>
        </div>
        <div class="col text-end">
            <a class="btn btn-primary rounded-2 shadow" asp-controller="Devices" asp-action="Create">
                <i class="bi bi-plus-circle"></i> Create New Device
            </a>
        </div>
    </div>
     <div  class="row py-3">
        <div class="col-12">
            <div class="mx-0">
                <table class="table table-borderd table-striped mx-0 px-0 ">
                    <thead>
                        <tr>
                            <th >
                                #
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                Serial Number
                            </th>
                            <th>
                               Category
                            </th>

                            <th ></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int counter = 0;
                        }
                        @foreach (var item in Model)
                        {
                            counter++;
                            <tr>
                                <td>
                                    @counter
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                             
                                <td>
                                    @Html.DisplayFor(modelItem => item.SerialNumber)
                                </td> 
                                <td>
                                    @Html.DisplayFor(modelItem => item.CategoryName)
                                </td>
                                <td>
                                    <div class="" >
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info text-white p-2 my-2 rounded-2  "><i class="bi bi-person-circle"></i>  Details</a>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary mx-2 p-2 my-2 rounded-2"><i class="bi bi-pencil-square"></i> Edit</a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger p-2 my-2 rounded-2"><i class="bi bi-trash-fill"></i> Delete</a>
                                    </div>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
      
    </div> 
</div> 


@* @model PaginatedList<GetDeviceDTO>
@{
    ViewData["Title"] = "Index";
}
<div class="container">
    <div class="row py-3">
        <div class="col">
            <h2 class="text-primary">Devices List</h2>
        </div>
        <div class="col text-end">
            <a class="btn btn-primary rounded-2 shadow" asp-controller="Devices" asp-action="Create">
                <i class="bi bi-plus-circle"></i> Create New Device
            </a>
        </div>
    </div>
     <div class="row py-3">
        <div class="col-12">
            <div class="mx-0">
                <table class="table table-borderd table-striped mx-0 px-0 ">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Name)</th>
                            <th>Serial Number</th>
                            <th>Category</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int counter = (Model.PageIndex - 1) * Model.PageSize;
                        }
                        @foreach (var item in Model)
                        {
                            counter++;
                            <tr>
                                <td>@counter</td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.SerialNumber)</td> 
                                <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                                <td>
                                    <div class="">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info text-white p-2 my-2 rounded-2"><i class="bi bi-person-circle"></i> Details</a>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary mx-2 p-2 my-2 rounded-2"><i class="bi bi-pencil-square"></i> Edit</a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger p-2 my-2 rounded-2"><i class="bi bi-trash-fill"></i> Delete</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div> 
    
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-pageSize="@Model.PageSize">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-pageSize="@Model.PageSize">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>
 *@



